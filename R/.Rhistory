library("regmhmm")
seed_num <- 1
p_noise <- 2
N <- 100
N_persub <- 10
parameters_setting <- list(
init_vec = c(0.5, 0.5),
trans_mat = matrix(c(0.7, 0.3, 0.2, 0.8), nrow = 2, byrow = TRUE),
emis_mat = matrix(c(1, 0.5, 0.5, 2), nrow = 2, byrow = TRUE)
)
simulated_data <- simulate_HMM_data(seed_num, p_noise, N, N_persub, parameters_setting)
init_start = c(0.5, 0.5)
trans_start = matrix(c(0.5, 0.5, 0.5, 0.5), nrow = 2)
emis_start = matrix(rep(1, 8), nrow = 2)
HMM_fit <- HMM(delta=as.matrix(init_start),
Y_mat=simulated_data$y_mat,
A=trans_start,
B=emis_start,
X_cube=simulated_data$X_array,
family="P",
eps=1e-4,
trace = 0
)
plot(HMM_fit)
method(plot)
methods(plot)
library("regmhmm")
# Example usage of the function
seed_num <- 1
p_noise <- 2
N <- 100
N_persub <- 10
parameters_setting <- list(
init_vec = c(0.5, 0.5),
trans_mat = matrix(c(0.7, 0.3, 0.2, 0.8), nrow = 2, byrow = TRUE),
emis_mat = matrix(c(1, 0.5, 0.5, 2), nrow = 2, byrow = TRUE)
)
simulated_data <- simulate_HMM_data(seed_num, p_noise, N, N_persub, parameters_setting)
init_start = c(0.5, 0.5)
trans_start = matrix(c(0.5, 0.5, 0.5, 0.5), nrow = 2)
emis_start = matrix(rep(1, 8), nrow = 2)
HMM_fit <- HMM(delta=as.matrix(init_start),
Y_mat=simulated_data$y_mat,
A=trans_start,
B=emis_start,
X_cube=simulated_data$X_array,
family="P",
eps=1e-4,
trace = 0
)
plot(HMM_fit)
methods(plot)
#'                B=emis_start,
#'                X_cube=simulated_data$X_array,
#'                family="P",
#'                eps=1e-4,
#'                trace = 0
#' )
#' plot(HMM_fit)
#' }
#'
#' @export
plot.HMM <- function(x, HMM, ...) {
UseMethod("plot")
transition_matrix <- HMM$A_hat
g <- graph_from_adjacency_matrix(transition_matrix, mode = "directed", weighted = TRUE)
font_size <- 12 - vcount(g)
node_size <- 30 - vcount(g)/5
state_labels <- paste0("S", seq_len(vcount(g)))
E(g)$label <- round(E(g)$weight, digits = 3)
plot(g,
layout = layout.circle,
vertex.color = "lightblue",
vertex.frame.color = "black",
vertex.label = state_labels,
vertex.size = node_size,
vertex.label.cex = font_size / 12,
edge.label = round(E(g)$weight, 2),
edge.curved = TRUE,
edge.arrow.size = 0.5)
invisible(x)
}
UseMethod
?UseMethod
methods("HMM")
library("devtools")
# usethis profile
## https://usethis.r-lib.org/articles/usethis-setup.html
options(
usethis.description = list(
"Authors@R" = utils::person(
"Man Chong", "Leong",
email = "mc.leong26@gmail.com",
role = c("aut", "cre"),
comment = c(ORCID = "0000-0003-3895-9527")
)
),
usethis.destdir = "/Users/mleong1/Documents/regmhmm",
usethis.overwrite = FALSE
)
proj_sitrep()
git_sitrep()
library("RcppArmadillo")
library("devtools")
# Add a dependency
use_package('glmnet')
use_package('glmnetUtils')
use_package('stats')
use_package('Rcpp')
use_package('igraph')
use_package('MASS')
# use_git()
usethis::use_build_ignore(c("developping_R", "development", "test", "tests"))
# Reload the package: CTRL-L or
devtools::load_all()
# Rcpp::compileAttributes()
Rcpp::compileAttributes(verbose=TRUE)
setwd("~/Documents/github/regmhmm")
# Rcpp::compileAttributes()
Rcpp::compileAttributes(verbose=TRUE)
roxygen2::roxygenize(roclets="rd")
# Rcpp::compileAttributes()
Rcpp::compileAttributes(verbose=TRUE)
roxygen2::roxygenize(roclets="rd")
library("devtools")
# usethis profile
## https://usethis.r-lib.org/articles/usethis-setup.html
options(
usethis.description = list(
"Authors@R" = utils::person(
"Man Chong", "Leong",
email = "mc.leong26@gmail.com",
role = c("aut", "cre"),
comment = c(ORCID = "0000-0003-3895-9527")
)
),
usethis.destdir = "/Users/mleong1/Documents/regmhmm",
usethis.overwrite = FALSE
)
proj_sitrep()
git_sitrep()
# gitcreds::gitcreds_set()
# badge
## https://usethis.r-lib.org/articles/badge-accessibility.html
library("RcppArmadillo")
library("devtools")
# Add a dependency
use_package('glmnet')
use_package('glmnetUtils')
use_package('stats')
use_package('Rcpp')
use_package('igraph')
use_package('MASS')
# use_git()
usethis::use_build_ignore(c("developping_R", "development", "test", "tests"))
# use_mit_license()
# Reload the package: CTRL-L or
devtools::load_all()
#roxygen2::roxygenize(package.dir = ".", roclets = NULL, load_code = NULL, clean = FALSE)
# Rcpp::compileAttributes()
Rcpp::compileAttributes(verbose=TRUE)
roxygen2::roxygenize(roclets="rd")
library("devtools")
# usethis profile
## https://usethis.r-lib.org/articles/usethis-setup.html
options(
usethis.description = list(
"Authors@R" = utils::person(
"Man Chong", "Leong",
email = "mc.leong26@gmail.com",
role = c("aut", "cre"),
comment = c(ORCID = "0000-0003-3895-9527")
)
),
usethis.destdir = "/Users/mleong1/Documents/regmhmm",
usethis.overwrite = FALSE
)
proj_sitrep()
git_sitrep()
# gitcreds::gitcreds_set()
# badge
## https://usethis.r-lib.org/articles/badge-accessibility.html
library("RcppArmadillo")
library("devtools")
# Add a dependency
use_package('glmnet')
use_package('glmnetUtils')
use_package('stats')
use_package('Rcpp')
use_package('MASS')
use_package('igraph')
# use_git()
usethis::use_build_ignore(c("developping_R", "development", "test", "tests"))
# use_mit_license()
# Reload the package: CTRL-L or
devtools::load_all()
# Rcpp::compileAttributes()
Rcpp::compileAttributes(verbose=TRUE)
roxygen2::roxygenize(roclets="rd")
codemetar::write_codemeta()
# (Re-)build NAMESPACE
devtools::document()
devtools::check()
setwd("~/Documents/regmhmm/R")
setwd("~/Documents/regmhmm")
?plot
?print
?plot
?invisible
library("regmhmm")
setwd("~/Documents/regmhmm/R")
library("igraph")
?plot
